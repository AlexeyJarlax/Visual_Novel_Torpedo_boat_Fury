package com.pavlovalexey.torpedo.ui

/**
 * –í —ç—Ç–æ–º –∫–æ–¥–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –ª–æ–≥–∏–∫–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—é–∂–µ—Ç–æ–º Visual Novel "Torpedo Boat Grozny by Pavlov Alexey.
 *
 * –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∫–æ–¥–∞:
 *
 *** –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –∏–≥—Ä—ã (GameRepositoryImpl): –≠—Ç–æ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã–µ –∏–≥—Ä—ã, —Ç–∞–∫–∏–µ –∫–∞–∫ –¥–∏–∞–ª–æ–≥–∏ –∏ —Å—Ü–µ–Ω—ã.
 *      - –ú–µ—Ç–æ–¥—ã:
 *          - `getInitialDialogue()`: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞—á–∞–ª—å–Ω—ã–π –¥–∏–∞–ª–æ–≥.
 *          - `getDialogueByIndex(index: Int)`: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–∏–∞–ª–æ–≥ –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –∏–Ω–¥–µ–∫—Å—É.
 *          - `getInitialScene()`: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞—á–∞–ª—å–Ω—É—é —Å—Ü–µ–Ω—É.
 *          - `getSceneByDialogueIndex(dialogueIndex: Int)`: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ü–µ–Ω—É –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞ –¥–∏–∞–ª–æ–≥–∞.
 *
 *** –î–∏–∞–ª–æ–≥ (Dialogue): –ü—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –æ–±—ä–µ–∫—Ç-–¥–∏–∞–ª–æ–≥ –≤ –∏–≥—Ä–µ.
 *      - –°–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ–∫—Å—Ç –∏ –≤–∞—Ä–∏–∞–Ω—Ç—ã –≤—ã–±–æ—Ä–∞.
 *
 *** –í–∞—Ä–∏–∞–Ω—Ç –≤—ã–±–æ—Ä–∞ –∏–∑ —Å–æ–±—ã—Ç–∏—è (Option): –ü—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –≤–∞—Ä–∏–∞–Ω—Ç, –¥–æ—Å—Ç—É–ø–Ω—ã–π –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤ –¥–∏–∞–ª–æ–≥–µ.
 *      - –°–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ–∫—Å—Ç, –∏–Ω–¥–µ–∫—Å —Å–ª–µ–¥—É—é—â–µ–≥–æ –¥–∏–∞–ª–æ–≥–∞ –∏ —ç—Ñ—Ñ–µ–∫—Ç—ã —Ä–µ—Å—É—Ä—Å–æ–≤.
 *
 *** –†–µ—Å—É—Ä—Å—ã (Resource): –ü—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –æ–±—ä–µ–∫—Ç-—Ä–µ—Å—É—Ä—Å—ã.
 *      - –í–∫–ª—é—á–∞–µ—Ç –≤ —Å–µ–±—è –¶–∞—Ä—Å–∫–∏–µ —Ä—É–±–ª–∏, —Å–ª–∞–≤—É, –ª–æ—è–ª—å–Ω–æ—Å—Ç—å –∫–æ–º–∞–Ω–¥—ã, –≤–æ–¥–∫—É, —Ç—è–∂–µ–ª–æ–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ—Ä—É–∂–∏–µ.
 *
 *** –°—Ü–µ–Ω–∞ (Scene): –ü—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –æ–±—ä–µ–∫—Ç-—Å—Ü–µ–Ω—É. –≠—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ —Å—Ü–µ–Ω—ã, –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–π –Ω–∞ —ç–∫—Ä–∞–Ω–µ –∑–∞ –¥–∏–∞–ª–æ–≥–∞–º–∏.
 *
 *** –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–∏–∑—É–∞–ª—å–Ω–æ–π –º–æ–¥–µ–ª—å—é (GameViewModel): –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–æ–π –∏–≥—Ä—ã.
 *      - –ú–µ—Ç–æ–¥—ã:
 *          - `selectOption(optionIndex: Int)`: –í—ã–±–∏—Ä–∞–µ—Ç –æ–ø—Ü–∏—é –≤ –¥–∏–∞–ª–æ–≥–µ –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Ä–µ—Å—É—Ä—Å—ã –∏ —Å—Ü–µ–Ω—É.
 *          - `goToNextDialogue()`: –ü–µ—Ä–µ—Ö–æ–¥–∏—Ç –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –¥–∏–∞–ª–æ–≥—É –±–µ–∑ –≤—ã–±–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
 *
 * MainActivity –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ Visual Novel "Torpedo Boat Grozny".
 *
 ***Layout activity_main: –û—Å–Ω–æ–≤–Ω–æ–π –º–∞–∫–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞, –∑–∞–≤—è–∑–∞–Ω–Ω—ã–π –Ω–∞ MainActivity.
 *      - –í–∫–ª—é—á–∞–µ—Ç –≤ —Å–µ–±—è:
 *      —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–∏–∞–ª–æ–≥–æ–≤,
 *      LinearLayout –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –≤—ã–±–æ—Ä–∞,
 *      ImageView –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ü–µ–Ω—ã,
 *      –ø–æ–ª–µ –¥–ª—è —Ä–∏—Å—É—Ä—Å–æ–≤ —Å —Å–∏–º–≤–æ–ª–∞–º–∏ –∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏,
 *      –∫–Ω–æ–ø–∫—É –º–µ–Ω—é/–≤—ã—Ö–æ–¥
 *      –µ—Å–ª–∏ –¥–æ—á–∏—Ç–∞–ª/–ª–∞ –¥–æ —Å—é–¥–∞ —Ç–æ —Ç—ã —Å—É–ø–µ—Ä-–∫—Ä–∞—Å–∞–≤—á–∏–∫
 */

import android.animation.Animator
import android.animation.AnimatorListenerAdapter
import android.animation.ValueAnimator
import android.graphics.Color
import android.os.Bundle
import android.text.Spannable
import android.text.SpannableString
import android.text.SpannableStringBuilder
import android.text.Spanned
import android.text.style.ForegroundColorSpan
import android.text.style.UnderlineSpan
import android.view.LayoutInflater
import android.view.View
import android.widget.Button
import android.widget.ImageView
import android.widget.LinearLayout
import android.widget.TextView
import androidx.appcompat.app.AppCompatActivity
import androidx.core.content.ContextCompat
import androidx.lifecycle.Observer
import com.google.android.material.button.MaterialButton
import com.pavlovalexey.torpedo.R
import com.pavlovalexey.torpedo.viewmodel.GameViewModel
import org.koin.androidx.viewmodel.ext.android.viewModel
import android.view.animation.ScaleAnimation
import androidx.core.view.doOnLayout

class MainActivity : AppCompatActivity() {
    private val gameViewModel: GameViewModel by viewModel()

    private lateinit var dialogueTextView: TextView
    private lateinit var optionsLayout: LinearLayout
    private lateinit var sceneImageView: ImageView
    private lateinit var rublesTextView: TextView
    private lateinit var fameTextView: TextView
    private lateinit var teamLoyaltyTextView: TextView
    private lateinit var vodkaTextView: TextView
    private lateinit var maximTextView: TextView
    private lateinit var capitalTextView: TextView
    private lateinit var necronomiconTextView: TextView

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        dialogueTextView = findViewById(R.id.dialogueTextView)
        optionsLayout = findViewById(R.id.optionsLayout)
        sceneImageView = findViewById(R.id.sceneImageView)
        rublesTextView = findViewById(R.id.rublesTextView)
        fameTextView = findViewById(R.id.fameTextView)
        teamLoyaltyTextView = findViewById(R.id.teamLoyaltyTextView)
        vodkaTextView = findViewById(R.id.vodkaTextView)
        maximTextView = findViewById(R.id.maximTextView)
        capitalTextView = findViewById(R.id.capitalTextView)
        necronomiconTextView = findViewById(R.id.necronomiconTextView)

        gameViewModel.currentScene.observe(this, Observer { scene ->
            sceneImageView.setImageResource(scene.background)
        })

        gameViewModel.currentDialogueIndex.observe(this, Observer { index ->
            updateUI(index)
        })

        findViewById<View>(android.R.id.content).setOnClickListener {
            if (optionsLayout.childCount == 0) { // —É—Å–ª–æ–≤–∏–µ - –µ—Å–ª–∏ –∫–Ω–æ–ø–æ–∫ –Ω–µ—Ç —Ç–æ –∫–ª–∏–∫ –ø–æ –≤—Å–µ–π –≤—å—é—Ö–µ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –¥–∏–∞–ª–æ–≥
                gameViewModel.goToNextDialogue()
            }

        }
    }

    private fun animateTextChange(textView: TextView, newText: String) {
        if (textView.text.toString() != newText) {
            val animator = ValueAnimator.ofFloat(1f, 2f)
            animator.duration = 400 // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∞–Ω–∏–º–∞—Ü–∏–∏ —É–≤–µ–ª–∏—á–µ–Ω–∏—è

            animator.addUpdateListener { animation ->
                val animatedValue = animation.animatedValue as Float
                textView.scaleX = animatedValue
                textView.scaleY = animatedValue
                if (animatedValue == 2f) {
                    textView.text = newText
                }
            }

            val reverseAnimator = ValueAnimator.ofFloat(2f, 1f)
            reverseAnimator.duration = 400 // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∞–Ω–∏–º–∞—Ü–∏–∏ —É–º–µ–Ω—å—à–µ–Ω–∏—è

            reverseAnimator.addUpdateListener { animation ->
                val animatedValue = animation.animatedValue as Float
                textView.scaleX = animatedValue
                textView.scaleY = animatedValue
            }

            animator.addListener(object : AnimatorListenerAdapter() {
                override fun onAnimationEnd(animation: Animator) {
                    reverseAnimator.start() // –ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏ —É–≤–µ–ª–∏—á–µ–Ω–∏—è –∑–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é —É–º–µ–Ω—å—à–µ–Ω–∏—è
                }
            })

            animator.start()
        }
    }

    private fun updateUI(currentDialogueIndex: Int) {
        val currentDialogue =
            gameViewModel.gameRepository.getDialogueByIndex(currentDialogueIndex) ?: return

        // –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –¥–∏–∞–ª–æ–≥–∞ –Ω–∞ —á–∞—Å—Ç–∏ –¥–æ –∏ –ø–æ—Å–ª–µ "::"
        val parts = currentDialogue.text.split("::")
        val formattedText = if (parts.size == 2) {
            val underlinedText = parts[0] // –¢–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –ø–æ–¥—á–µ—Ä–∫–Ω—É—Ç—å
            val remainingText = parts[1] // –û—Å—Ç–∞–≤—à–∞—è—Å—è —á–∞—Å—Ç—å —Ç–µ–∫—Å—Ç–∞

            // –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ —Å –ø–æ–¥—á–µ—Ä–∫–Ω—É—Ç–æ–π –∏ –≥–æ–ª—É–±–æ–π —á–∞—Å—Ç—å—é
            SpannableStringBuilder().apply {
                append(underlinedText)
                setSpan(UnderlineSpan(), 0, underlinedText.length, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE)
                setSpan(
                    ForegroundColorSpan(
                        ContextCompat.getColor(
                            this@MainActivity,
                            R.color.yp_blue_light
                        )
                    ), 0, underlinedText.length, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE
                )
                append(remainingText)
            }
        } else {
            currentDialogue.text // –ï—Å–ª–∏ "::" –Ω–µ—Ç, –ø—Ä–æ—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤–µ—Å—å —Ç–µ–∫—Å—Ç –±–µ–∑ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è –∏ –≥–æ–ª—É–±–æ–≥–æ —Ü–≤–µ—Ç–∞
        }

        dialogueTextView.text = formattedText

        // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–Ω–∞—á–µ–Ω–∏–π —Ä–µ—Å—É—Ä—Å–æ–≤
        val resources = gameViewModel.resources.value
        resources?.let {
            if (it.rubles != 0) {
                animateTextChange(rublesTextView, getString(R.string.currency_format, "‚ÇΩ", it.rubles))
            } else {
                rublesTextView.text = ""
            }

            if (it.fame != 0) {
                animateTextChange(fameTextView, getString(R.string.symbol_format, "üèÜ", it.fame))
            } else {
                fameTextView.text = ""
            }

            if (it.teamLoyalty != 0) {
                animateTextChange(
                    teamLoyaltyTextView,
                    getString(R.string.symbol_format, "üö©", it.teamLoyalty)
                )
            } else {
                teamLoyaltyTextView.text = ""
            }

            if (it.vodka != 0) {
                animateTextChange(vodkaTextView, getString(R.string.symbol_format, "üç∂", it.vodka))
            } else {
                vodkaTextView.text = ""
            }

            if (it.maxim != 0) {
                animateTextChange(maximTextView, getString(R.string.symbol_format, "üí•", it.maxim))
            } else {
                maximTextView.text = ""
            }

            if (it.capital != 0) {
                animateTextChange(capitalTextView, getString(R.string.symbol_format, "‚ò≠", it.capital))
            } else {
                capitalTextView.text = ""
            }

            if (it.necronomicon != 0) {
                animateTextChange(
                    necronomiconTextView,
                    getString(R.string.symbol_format, "üêô", it.necronomicon)
                )
            } else {
                necronomiconTextView.text = ""
            }
        }

        optionsLayout.removeAllViews()
        currentDialogue.options.forEachIndexed { index, option ->
            val optionButtonView =
                LayoutInflater.from(this).inflate(R.layout.option_button, optionsLayout, false)
            if (optionButtonView is MaterialButton) {
                optionButtonView.text = option.text
                optionButtonView.setOnClickListener {
                    gameViewModel.selectOption(index)
                }
                optionsLayout.addView(optionButtonView)
            }
        }
    }
}
